<%@ Import Namespace="System.Web" %>
<%@ Import Namespace="WebSupergoo.ABCpdf9" %>
<%@ Import Namespace="WebSupergoo.ABCUpload6" %>
<%@ Assembly Name="ABCpdf" %>
<%@ Page Language="C#"%>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head id="Head1" runat="server">
    <title>MLearning PDF</title>
</head>
<body>
<%
    //Quick license/software check
    bool abcPdfWarn = false;
	try {
		Doc theDoc = new Doc();
		string theLic = theDoc.License;
		if (theLic.StartsWith("No License")) {
			theLic = "license unavailable or expired";
			abcPdfWarn = true;
		}
		Response.Write("<b>ABCpdf .NET " + theLic + "</b><br />");
	}
	catch (Exception ex) {
		Response.Write("<b>ABCpdf Not Installed.  " + ex.Message + "</b><br />");
	}

   
%>
    <form id="form1" runat="server">
    <div>
    <%
       
        string source =  Request.QueryString["uUrl"];
        string href = Request.QueryString["uPath"];
           
        string[] stringSeparators = new string[] {";"};
        string [] pairs;
        int id;
        //Random number generator for help prevent browser caching        
        Random rand = new Random();


        
        if (!String.IsNullOrEmpty(source))
        {
            Doc theDoc = new Doc();
            theDoc.Rect.Inset(72, 92);

            theDoc.HtmlOptions.BrowserWidth = 1300;
            theDoc.HtmlOptions.Timeout = 300000;
            // apply a rotation transform
            double w = theDoc.MediaBox.Width;
            double h = theDoc.MediaBox.Height;
            double l = theDoc.MediaBox.Left;
            double b = theDoc.MediaBox.Bottom ;
            //theDoc.Rect.Position(50, 50);
            //theDoc.Rect.Width = 400;
            //theDoc.Rect.Height = 700;
               
           //  theDoc.Transform.Rotate( 90, l, b);
           //  theDoc.Transform.Translate( w, 0);

            // rotate our rectangle
            //theDoc.Rect.Width = h;
            //theDoc.Rect.Height = w; 
            pairs = source.Split(stringSeparators, StringSplitOptions.RemoveEmptyEntries);
            if (pairs.Length < 1)
            {
                throw new Exception("Improper parameters passed.");
            }
            href = href.Substring(0, href.LastIndexOf("/"));  //look backwords..from end of string

            foreach (string uri in pairs)
            {
                try
                {
                    theDoc.Page = theDoc.AddPage();

                    //Keep only during development
                    theDoc.AddGrid();
                    theDoc.Color.String = "255 0 0";
                    theDoc.Width = 10;
                    //**** End development grid testing
                    
                    //Now add href base plus the parameters plus a random number (to help prevent browser caching)
                    id = theDoc.AddImageUrl(href + "?" + uri + "&lll=" + rand.Next().ToString());
                    while (true)
                    {
                        if (!theDoc.Chainable(id))
                            break;
                        theDoc.Page = theDoc.AddPage();
                        id = theDoc.AddImageToChain(id);
                    } //End while
                }
                catch (Exception e)
                {
                    throw new Exception("There was an error creating the PDF. The error message was '" + e.Message + "'");
                }
            } //end for each

            //Flatten document
            //theDoc.SetInfo(theID, "/Rotate", "90");
            for (int i = 1; i <= theDoc.PageCount; i++) {
              theDoc.PageNumber = i;
              theDoc.Flatten();
            }


            //Now dislay the document to the user
            byte [] theData = theDoc.GetData();
            Response.Clear();
            Response.ContentType = "application/pdf";
            Response.AddHeader("content-length", theData.Length.ToString()); 
            Response.AddHeader("content-disposition", "attachment; filename=MLearning.PDF");
            Response.BinaryWrite(theData);
            Response.End();

            theDoc.Clear();

        }
        else
        {
            Response.Write("No parameters passed.");
        }
         %>
    </div>
    </form>
</body>
</html>
