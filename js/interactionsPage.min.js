if(typeof console=="undefined"||typeof console.log=="undefined"){var console={log:function(){}}}var testing=parent.testing;var outputWindow=document.getElementById("output")?document.getElementById("output"):document.getElementById("content").innerHTML+=("<div id='output'><p>&nbsp;</p></div>");if((parent.data.IntArray)&&(parent.APIOK())){var suspendData=parent.SCOGetValue("cmi.suspend_data")?parent.SCOGetValue("cmi.suspend_data"):"";var iMax=0;var iScore="";var znP=parent.data.znThisPage;var qPage=parent.data.PageArray[znP-1];var qQuiz=qPage.quiz;var qType="I";qPage.type=qType;var objectiveID=(qType+qPage.quiz);var itemList=parent.data.itemList;var recommendedMsg=parent.data.recommendedMsg;var requiredMsg=parent.data.requiredMsg;var completedMsg=parent.data.completedMsg;var qMax=parent.data.PageArray[znP-1].qMax;var qStatus=parent.data.PageArray[znP-1].qStatus;var totalObj=parent.SCOGetValue("cmi.objectives._count");var objMax=parent.SCOGetObjectiveData(objectiveID,"score.max");var objScore=parent.SCOGetObjectiveData(objectiveID,"score.raw");var objStatus=parent.SCOGetObjectiveData(objectiveID,"status");var iStatus=((objStatus)&&(objStatus!=" "))?objStatus:"not attempted";var LMSobjectivesCount=parent.SCOGetValue("cmi.objectives._count");var tmp=document.createElement("div");var loadingMsgStr="Loading data, please wait!<br><img src='images/ajax-loader-3.gif'/>";tmp.id="loadingMsg";tmp.className="loadingMsg";document.getElementById("NavBar").appendChild(tmp);document.getElementById("loadingMsg").innerHTML=(loadingMsgStr);turnOnMsg();if(testing){console.log("LMS Data from MarkObjectiveDone: objMax= "+objMax+" objScore="+objScore+" objStatus="+objStatus)}if(isNaN(parent.SCOGetObjectiveIndex(objectiveID))){parent.SCOSetObjectiveData(objectiveID,"status","not attempted");if(testing){console.log("setting status=for "+objectiveID)}}if(window.testing){console.log("LMSobjectivesCount="+LMSobjectivesCount+"objStatus= "+objStatus)}qMax=qMax?qMax:0;if(testing){console.log("interactionsPage.js output for: objectiveID= "+objectiveID+" <br>znThisPage= "+znP);console.log("iMax="+iMax+" <br>iScore="+iScore+"prior to iScoreCalc")}setUpInteractions();document.body.onbeforeunload+=saveInteractions;document.body.onunload+=saveInteractions}else{outputWindow.innerHTML=("<h1 style='color:red;'>MLearning not available. Interactions will not score! but you can still browse the module</h1>")}function setUpInteractions(){if(testing){console.log("In setUpInteractions")}iScore=0;iMax=0;var a=window.itemList;if(a){for(var b in a){var c=a[b];if(testing){console.log("k= "+b+":"+c.id+", itm.quiz= "+c.quiz+"qQuiz= "+qQuiz+" , itm.ascore= "+c.ascore+", itm.status= "+c.status+", itm.msg= "+c.msg+", itm.tries=  "+c.tries+", objectiveID= "+objectiveID+"<br>")}if(c.quiz==qQuiz){if(testing){console.log("Interaction quiz number matches this page's quiz number")}setFeedbackMsg(c.msg,c.id);iMax+=c.amax;if(testing){console.log(b+"<br>itm.quiz= "+c.quiz+"<br> itm.msg= "+c.msg+"itm.ascore= "+c.ascore)}if(c.ascore>=c.amax){iScore+=parseInt(c.amax,10)}else{iScore+=parseInt(c.ascore,10)}if(testing){console.log("after adding "+c.id+":itm.ascore"+c.ascore+", iScore= "+iScore)}}}iScoreCalc();saveInteractions();qMax=iMax;qScore=iScore;qStatus=iStatus;if(iScore>0){parent.SCOSetObjectiveData(objectiveID,"score.raw",iScore.toString())}if((iScore==0)&&(iMax>0)){parent.SCOSetObjectiveData(objectiveID,"status","not attempted")}parent.SCOSetObjectiveData(objectiveID,"score.max",iMax.toString());if(iScore>=iMax){MarkObjectiveDone(c.quiz)}}qStatus=objStatus;if(testing){console.log("qStatus= "+qStatus+"thePageArray= "+thePageArray)}turnOffMsg()}function setFeedbackMsg(b,a){if(testing){console.log("zmsg="+b+" itmID="+a)}var c=parent.data.itemList[a];c.msg=b;document.getElementById("msg_"+a).innerHTML=(b)}function recordItem(a,c){loadingMsgStr="Sending data to MLearning, may take time before status is updated!<br><img src='images/ajax-loader-3.gif'/>";turnOnMsg();var b=parent.data.itemList[a];if(testing){console.log("In recordItem, itm.tries= "+b.tries)}b.tries=parseFloat(b.tries);if(testing){console.log("In recordItem, parseInt(itm.tries,10)= "+b.tries+"<br>")}b.tries=(b.tries+1);if(testing){console.log("In recordItem, just set itm.tries to "+b.tries+"<br>")}b.ascore=parseFloat(c);if(testing){console.log("in record item just set itm.ascore to "+b.ascore+"<br>")}if((b.amax>0)&&(b.tries==0)){setFeedbackMsg(requiredMsg,b.id);if(testing){console.log("p1")}}else{if((b.amax==0)&&(b.tries==0)){setFeedbackMsg(recommendedMsg,b.id);if(testing){console.log("p2")}}else{if((b.amax>0)&&(b.tries>0)){setFeedbackMsg(completedMsg,b.id);if(testing){console.log("p3")}}else{if((b.amax==0)&&(b.tries>0)){setFeedbackMsg(completedMsg,b.id)}else{alert("itm.tries error in function recordItem<br>Please note this data and send to MLearning team.<br>+itmID= "+itmID+" itm.amx= "+b.amax+" itm.tries= "+b.tries)}}}}iScoreCalc();if(testing){console.log("<br>in record item, just ran iScoreCalc: iScore is"+iScore+"iMax is"+iMax+"<br>")
}saveInteractions();if(testing){console.log("<br>ABC in recordItem: iScore = "+iScore+"<br>");console.log("<br>in recordItem: itm.tries = "+b.tries+"<br>")}qPage.qScore=iScore;turnOffMsg()}function iScoreCalc(){var c=1;iScore=0;for(var b in itemList){var a=itemList[b];if(testing){console.log("<br>in iScoreCalc itm.id:"+a.id+" objectiveID= "+objectiveID+", objectiveID.slice(1)= "+objectiveID.slice(1)+" typeof itmm.ascore"+typeof a.ascore+" itmm.tries= "+a.tries)}if(a.quiz==objectiveID.slice(1)){iScore+=(a.ascore*1);if(testing){console.log("<br>after adding itm["+b+"].ascore: (itmm.ascore*1)"+a.ascore*1+"itmm.tries= "+a.tries+", iScore now ="+iScore)}if((a.amax>0)&&(a.tries==0)){c=0;if(testing){console.log("PGT I just set tempStatus to 0: itmm.amx= "+a.amax+" itmm.tries= "+a.tries+" tempStatus="+c)}}}}if(testing){console.log("<br> iMax="+iMax+" <br>iScore="+iScore+"after iScoreCalc<hr><br>")}parent.SCOSetObjectiveData(objectiveID,"score.raw",iScore.toString());parent.SCOSetObjectiveData(objectiveID,"score.max",iMax.toString());if((c==1)&&(iScore>=iMax)){MarkObjectiveDone();if(testing){console.log("<br> ran MarkObjectiveDone after iScoreCalc<hr><br>")}}else{parent.SCOSetObjectiveData(objectiveID,"status","incomplete");iStatus="incomplete";qStatus="incomplete";if(testing){console.log("<br> XPG set objectiveID status to incomplete"+objectiveID+" iStatus"+iStatus+"qStatus="+qStatus)}}return iScore}function turnOnMsg(){document.getElementById("loadingMsg").style.display="block"}function turnOffMsg(){document.getElementById("loadingMsg").style.display="none"}function saveInteractions(){parent.data.saveInteractions();if(testing){console.log("I just saved interactions from interactionsPage.js")}}function MarkObjectiveDone(){if(testing){console.log("<br>in MarkObjectiveDone: about to setobjective"+objectiveID+"completed</br>")}parent.SCOSetObjectiveData(objectiveID,"status","completed");parent.SCOSetObjectiveData(objectiveID,"score.raw",iScore.toString());parent.SCOSetObjectiveData(objectiveID,"score.max",iMax.toString());window.parent.SCOCommit();iStatus="completed";qStatus="completed";if(testing){console.log('<hr><b style="color:blue">LMS Data from MarkObjectiveDone:</b><br/>objectiveID='+objectiveID+" objMax= "+objMax+"<br>objScore="+objScore+"<br>objStatus="+objStatus+"<br>")}znP=(window.pageNo);window.znP=(pageNo)}function clearObjectiveData(){parent.SCOSetObjectiveData(objectiveID,"score.raw","0");parent.SCOSetObjectiveData(objectiveID,"score.max","0");parent.SCOSetObjectiveData(objectiveID,"status","incomplete")};